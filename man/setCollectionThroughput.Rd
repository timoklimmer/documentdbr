% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setCollectionThroughput.R
\name{setCollectionThroughput}
\alias{setCollectionThroughput}
\title{Change the throughput for a Cosmos DB collection}
\usage{
setCollectionThroughput(connectionInfo, throughput, userAgent = "")
}
\arguments{
\item{connectionInfo}{A DocumentDB connection info object generated with getDocumentDBConnectionInfo().}

\item{throughput}{The user specified throughput for the collection expressed in units of 100 request units per second. This can be between 400 and 250,000 (or higher by requesting a limit increase). If the value is over 10,000, then the collection must include a partitionKey definition. If the value is equal to or under 10,000, then the collection must not include a partitionKey definition.}

\item{userAgent}{Optional. A string that specifies the client user agent performing the request. The recommended format is {user agent name}/{version}. For example, the official DocumentDB .NET SDK sets the User-Agent string to Microsoft.Document.Client/1.0.0.0. A custom user-agent could be something like ContosoMarketingApp/1.0.0.}
}
\value{
Some information extracted from the REST API response such as request charge and session token.
}
\description{
This function allows you to change the throughput (RU's) for a Cosmos DB collection from within your R code.

Note that the change will take effect immediately, but it the Azure portal may take a couple of minutes to show
the new scale setting.
}
\examples{
# load the documentdbr package
library(documentdbr)

# get a DocumentDBConnectionInfo object
myCollection <- getDocumentDBConnectionInfo(
  accountUrl = "https://somedocumentdbaccount.documents.azure.com",
  primaryOrSecondaryKey = "t0C36UstTJ4c6vdkFyImkaoB6L1yeQidadg6wasSwmaK2s8JxFbEXQ0e3AW9KE1xQqmOn0WtOi3lxloStmSeeg==",
  databaseId = "MyDatabaseId",
  collectionId = "MyCollectionId"
)

# scale up Cosmos DB performance before running a big query
scaleResult <- setCollectionThroughput(myCollection, 9500)

# run a big query
queryResult <- selectDocuments(myCollection, "SELECT Items.name, Items.description, Items.isComplete FROM Items")

# scale Cosmos DB performance back down to save money
scaleResult <- setCollectionThroughput(myCollection, 500)
}
